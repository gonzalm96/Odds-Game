{"version":3,"sources":["index.module.css","index.js","reportWebVitals.js"],"names":["module","exports","pOne","pTwo","maxO","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","outPut","flag","Hello","props","state","input","gameStage","addValue","bind","updateInput","evt","console","log","this","cleanedInput","replace","preventDefault","setState","parseInt","alert","target","value","status","playerInput","calcRes","check","introText","className","styles","wrapper","type","onChange","onClick","React","Component","Results","displayResults","countdown","timer","startCounter","counter","setInterval","seconds","clearInterval","outro","count","res","results","boxContainer","box","id","Heading","menuWrapper","headings","menuButton","showRules","Board","getResults","gameState","game","rules","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a217e701.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuWrapper\":\"src_menuWrapper__2ElVy\",\"menuButton\":\"src_menuButton__RdkDa\",\"wrapper\":\"src_wrapper__3BP5T\",\"rules\":\"src_rules__6NHe1\",\"counter\":\"src_counter__36I-y\",\"results\":\"src_results__3pTK-\",\"boxContainer\":\"src_boxContainer__1-b1D\",\"box\":\"src_box__1udOt\"};","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\n//import App from './App';\nimport styles from './index.module.css';\nimport reportWebVitals from './reportWebVitals';\n\nlet pOne;\nlet pTwo;\nlet maxO;\nlet outPut = null;\nlet flag = 0;\n\nclass Hello extends React.Component{\n    constructor(props)\n    {\n      super(props);\n      this.state = {\n        input:'',\n        //0 - start, 1 - maxOdd set, 2 - playerOne set, 3 - playerTwo set \n        gameStage: 0,\n      };\n      this.addValue = this.addValue.bind(this);\n      this.updateInput = this.updateInput.bind(this);\n    }\n    \n    addValue(evt)\n    {\n      console.log(\"Passing: \"+ this.state.input)\n      let cleanedInput = this.state.input.replace(/\\D/g,'');\n      evt.preventDefault();\n      if(this.state.gameStage === 0)\n      {\n        maxO = cleanedInput;\n        this.setState({gameStage: 1, input:''});\n\n      }\n      else{\n        if(parseInt(this.state.input) <= maxO){\n          if(this.state.gameStage === 1){\n            pOne = cleanedInput;\n            this.setState({gameStage: 2, input:''});\n          }\n          else if (this.state.gameStage === 2) {\n            pTwo = cleanedInput;\n            this.setState({gameStage: 3,input:''});\n            flag = 1;\n          }\n          else{\n            alert(\"what is happening\");\n          }\n        }\n        else{\n          alert(\"Please choose a number between 1 and \" + maxO);\n          this.setState({ input: '' });\n        }\n      } \n    }\n\n    updateInput(evt){\n       this.setState({input: evt.target.value});\n    }\n\n    calcRes() {\n      //if the guesses match\n      if (pOne === pTwo) {\n        return 0;\n      }\n      //if they add up to the max\n      else if (parseInt(pOne)+parseInt(pTwo) == maxO) {\n        return 2;\n      }\n      //if they dont match\n      else if (pOne !== pTwo) {\n        return 1;\n      \n      }\n    }\n    \n    render()\n    {\n      let status = null;\n      let playerInput = null;\n      if (!maxO) {\n        status = \"Please enter a maximum Odd\";\n      }\n\n      if(this.state.gameStage === 1){\n        playerInput = \"Player One, a number between 1 and \" + maxO;\n      }\n      else if(this.state.gameStage === 2){\n        playerInput = \"Player Two, a number between 1 and \" + maxO;\n      }\n\n      if(this.state.gameStage === 3 && outPut === null){\n        outPut = this.calcRes();\n        this.props.check();\n\n      }\n\n      const introText = <h2>{ playerInput ? playerInput : status}</h2>;\n      return (\n      \n      <div className={styles.wrapper}>\n        <div>\n            {introText}\n        </div>\n\n        <form>\n          <input type=\"text\" value={this.state.input} onChange={this.updateInput} /><br/><br/>\n          <button onClick={this.addValue} type=\"submit\">Submit</button>\n        </form>\n      </div>\n      );\n    }\n  }\n\nclass Results extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      displayResults: false,\n      countdown: 3\n    };\n    this.timer = 0;\n    this.startCounter = this.startCounter.bind(this);\n    this.counter = this.counter.bind(this);\n  }\n\n  startCounter() {\n    if (this.timer === 0 && this.state.countdown > 0) {\n      this.timer = setInterval(this.counter, 1000);\n    }\n  }\n\n\n  counter(){\n    let seconds = this.state.countdown - 1;\n    this.setState({\n      countdown: seconds\n    });\n    console.log(\"countdown counter: \" +seconds);\n    if(seconds === 0){\n      clearInterval(this.timer);\n      this.setState({displayResults: true});\n    }\n  }\n  \n  \n\n  render(){\n\n    let outro = \"\";\n\n    if (outPut === 0) {\n      outro = \"Yikes, it's a match!\";\n    }\n    else if (outPut === 1) {\n      outro = \"Better luck next time!\";\n    }\n    else if (outPut === 2) {\n      outro = \"How the tables have turned...\";\n    }\n\n    let count = <h2 className={styles.counter}>{this.state.countdown}</h2>;\n    let res =\n      <div className={styles.results}>\n        <div>\n          <h2>{outro}</h2>\n        </div>\n        <div className={styles.boxContainer}>\n          <div className={styles.box}>\n            <h3>{pOne}</h3>\n            <p>P1</p>\n          </div>\n          <div className={styles.box}>\n            <h3>{pTwo}</h3>\n            <p>P2</p>\n          </div>\n        </div>\n      </div>;\n\n    console.log(outPut+\" called it\");\n    if(this.state.countdown > 0){\n      this.startCounter();\n    }\n  \n    return(\n      <div id=\"resultsWrap\">\n        <div className={styles.wrapper}> \n          { this.state.displayResults ? res : count }\n        </div>\n        {/* <button onClick={this.onClick}>New Game</button> */}\n      </div>\n    );\n  }\n}\n\nclass Heading extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  \n  render(){\n    return(\n      <div className={styles.menuWrapper}>\n        <div className={styles.headings}>\n          <h1>What are the odds?</h1>\n        </div>\n        <div>\n          <button className={styles.menuButton} onClick={this.props.showRules}>Help</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Board extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      //true - getting input, false - ready to display results\n      gameState: true,\n      showRules: false\n    };\n  }\n\n  getResults = () => {\n    if(flag === 1){\n      this.setState({ gameState: false });\n    }\n  }\n\n  showRules = () => {\n    if(this.state.showRules){\n      this.setState({showRules: false});\n    }\n    else{\n      this.setState({showRules: true});\n    }\n  }\n\n  \n\n  render()\n  {\n    const game = \n    <div>\n      {this.state.gameState ? <Hello check={this.getResults} /> : <Results />}\n    </div>;\n\n    const rules = \n      <div className={styles.rules}>\n        <h3>Rules:</h3>\n        <ul>\n          <li>Two people make a bet, usually in a \"What are the odds you will...\" format</li>\n          <li>\n            The person asked will set an upper limit for a number, recommended ranges for upper limits:\n            <ul>\n              <li>Something harmless: 1-50</li>\n              <li>Something you don't want to do: 50-75</li>\n              <li>Something you really don't want to do: 75-150</li>\n              <li>Felony: 200+</li>\n            </ul>\n          </li>\n          <li>Player 1 submits a number without showing player&nbsp;2</li>\n          <li>Player 2 submits number without showing player&nbsp;1</li>\n          <li>After the count of three both players will see who will have to do the bet!\n            <ul>\n              <li>If the numbers don't match, nobody has to do the bet</li>\n              <li>If the numbers do match, the one who set the upper limit must do the bet</li>\n              <li>If the sum of the numbers is equal to the upper limit set, the bet is flipped and the initiator must now complete the bet</li>\n            </ul>\n          </li>\n        </ul>\n      </div>;\n\n    return(\n      <div>\n        <div>\n          <Heading showRules={this.showRules}/>\n        </div>\n        <div>\n          { game }\n          { this.state.showRules ? rules : null }\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Board />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n"],"sourceRoot":""}